# Generated by Django 5.0.7 on 2024-11-12 07:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Feedbacksystem', '0113_alter_likertevaluation_admin_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PeertoPeerEvaluationQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('order', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PeertoPeerEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command_and_knowledge_of_the_subject', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('depth_of_mastery', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('practice_in_respective_discipline', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('up_to_date_knowledge', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('integrates_subject_to_practical_circumstances', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('organizes_the_subject_matter', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('provides_orientation_on_course_content', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('efforts_of_class_preparation', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('summarizes_main_points', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('monitors_online_class', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('holds_interest_of_students', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('provides_relevant_feedback', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('encourages_participation', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('shows_enthusiasm', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('shows_sense_of_humor', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('teaching_methods', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('flexible_learning_strategies', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('student_engagement', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('clear_examples', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('focused_on_objectives', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('starts_with_motivating_activities', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('speaks_in_clear_and_audible_manner', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('uses_appropriate_medium_of_instruction', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('establishes_online_classroom_environment', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('observes_proper_classroom_etiquette', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('uses_time_wisely', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('gives_ample_time_for_students_to_prepare', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('updates_the_students_of_their_progress', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('demonstrates_leadership_and_professionalism', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('understands_possible_distractions', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('sensitivity_to_student_culture', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('responds_appropriately', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('assists_students_on_concerns', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('guides_the_students_in_accomplishing_tasks', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('extends_consideration_to_students', models.IntegerField(choices=[(5, 'Outstanding'), (4, 'Very Satisfactory'), (3, 'Satisfactory'), (2, 'Unsatisfactory'), (1, 'Poor')])),
                ('requires_less_task_for_credit', models.BooleanField()),
                ('strengths_of_the_faculty', models.TextField()),
                ('other_suggestions_for_improvement', models.TextField()),
                ('comments', models.TextField()),
                ('predicted_sentiment', models.CharField(max_length=50)),
                ('academic_year', models.CharField(blank=True, max_length=50, null=True)),
                ('semester', models.CharField(blank=True, max_length=50, null=True)),
                ('average_rating', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('evaluated', 'Evaluated')], default='pending', max_length=20)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('peer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Feedbacksystem.faculty')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated', '-created'],
            },
        ),
    ]
